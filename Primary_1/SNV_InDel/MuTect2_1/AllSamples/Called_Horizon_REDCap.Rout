
R version 4.0.4 (2021-02-15) -- "Lost Library Book"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ####################################################################################################################
> ####################################################################################################################
> # Get list of Horizon and REDCap variants called by our pipeline.
> # Author: Haiying Kong
> # Last Modified: 24 July 2021
> ####################################################################################################################
> ####################################################################################################################
> #!/home/projects/cu_10184/people/haikon/Software/R-4.0.4/bin/Rscript
> 
> setwd('/home/projects/cu_10184/projects/PTH')
> options(stringsAsFactors=FALSE)
> rm(list=ls())
> 
> library(stringr)
> library(xlsx)
Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=
> 
> # Set parameters.
> filter.schemes = c('VariantClass', 'TechError', 'DB_Long', 'DB_Short')
> 
> for (filter.scheme in filter.schemes)  {
+ 
+ ####################################################################################################################
+ ####################################################################################################################
+ # Read in variant list for all samples.
+ ####################################################################################################################
+ aster = read.table(paste0('AllBatches_1/Result/SNV_InDel/MuTect2_1/FilteredVariants_', filter.scheme, '.txt'), header=TRUE, quote='', sep='\t')
+ j = match(c('Chromosome', 'Start_Position', 'End_Position', 'Reference_Allele', 'Tumor_Seq_Allele2'), names(aster))
+ names(aster)[j] = c('Chrom', 'Start', 'End', 'Ref', 'Alt')
+ aster$Tag = ''
+ 
+ ####################################################################################################################
+ # Column names for apple.
+ maf.cols = c('Batch', 'PTH_ID', 'Sample', 'Hugo_Symbol', 'Chrom', 'Start', 'Ref', 'Alt', 'Refseq_mRNA_Id', 'cDNA_Change', 'Protein_Change', 'AF', 'DP')
+ 
+ ####################################################################################################################
+ ####################################################################################################################
+ # Read in Horizon and REDCap variants.
+ ####################################################################################################################
+ # Horizon:
+ horizon = read.table('Reference/Horizon/HorizonMyeloid_brief.txt', header=TRUE, sep='\t')[ ,c(1:7,12)]
+ horizon = cbind(rep('Horizon', nrow(horizon)), horizon)
+ idx = which(horizon$OnPanel=='yes')
+ names(horizon)[c(1,8,9)] = c('PTH_ID', 'ProteinChange', 'Note')
+ horizon$Note[idx] = 'Horizon_OnPanel'
+ horizon$Note[-idx] = 'Horizon_NotOnPanel'
+ horizon.tag = paste(horizon$PTH_ID, horizon$Hugo_Symbol, horizon$Chrom, horizon$Start, horizon$Ref, horizon$Alt, sep='_')
+ 
+ # REDCap:
+ redcap = read.table('Reference/REDCap/REDCap_202102_Anno.txt', header=TRUE, sep='\t')[ ,c(1,2,7,8,10,11,3,12:14,6,5)]
+ redcap$Note = 'REDCap'
+ idx = which(redcap$Important==1)
+ redcap$Note[idx] = paste(redcap$Note[idx], 'Important', sep='_')
+ idx = which(redcap$SNP==1)
+ redcap$Note[idx] = paste(redcap$Note[idx], 'SNP', sep='_')
+ redcap = redcap[ ,-(11:12)]
+ 
+ ####################################################################################################################
+ ####################################################################################################################
+ # Collect all variants that match PTH_ID, Hugo_Symbol and Chrom with Horizon or REDCap.
+ ####################################################################################################################
+ ####################################################################################################################
+ # Tag with Horizon variants.
+ ####################################################################################################################
+ aster.tag = paste(aster$PTH_ID, aster$Hugo_Symbol, aster$Chrom, aster$Start, aster$Ref, aster$Alt, sep='_')
+ 
+ idx = which(aster.tag %in% horizon.tag)
+ 
+ aster$Tag[idx] = 'Horizon'
+ 
+ apple = aster[idx, maf.cols]
+ idx.ref = match(aster.tag[idx], horizon.tag)
+ apple$AF_Clinic = horizon$AF[idx.ref]
+ apple$Note = horizon$Note[idx.ref]
+ 
+ ####################################################################################################################
+ # Tag with REDCap variants.
+ ####################################################################################################################
+ # Identify REDCap patients that are not in our data.
+ idx = c(which(!(redcap$PTH_ID %in% unique(aster$PTH_ID))), which(is.na(redcap$cDNA_Change)))
+ if (length(idx)>0)  {
+   redcap = redcap[-idx, ]
+   }
+ 
+ ####################################################################################################################
+ # Exact match for PTH_ID, Hugo_Symbol, Chrom, Start, Ref and Alt:
+ redcap.tag = paste(redcap$PTH_ID, redcap$Hugo_Symbol, redcap$Chrom, redcap$Start, redcap$Ref, redcap$Alt, sep='_')
+ 
+ idx = which(aster.tag %in% redcap.tag)
+ 
+ aster$Tag[idx] = 'REDCap'
+ 
+ tmp = aster[idx, maf.cols]
+ idx.ref = match(aster.tag[idx], redcap.tag)
+ tmp$AF_Clinic = redcap$AF[idx.ref]
+ tmp$Note = redcap$Note[idx.ref]
+ 
+ apple = rbind(apple, tmp)
+ 
+ ####################################################################################################################
+ # Exact match for PTH_ID, Hugo_Symbol, Chrom, Start, and cDNA_Change.
+ redcap.tag = paste(redcap$PTH_ID, redcap$Hugo_Symbol, redcap$Chrom, redcap$Start, redcap$cDNA_Change, sep='_')
+ aster.tag = paste(aster$PTH_ID, aster$Hugo_Symbol, aster$Chrom, aster$Start, aster$cDNA_Change, sep='_')
+ 
+ idx = which((aster.tag %in% redcap.tag) & (aster$Tag==''))
+ 
+ aster$Tag[idx] = 'REDCap'
+ 
+ tmp = aster[idx, maf.cols]
+ idx.ref = match(aster.tag[idx], redcap.tag)
+ tmp$AF_Clinic = redcap$AF[idx.ref]
+ tmp$Note = redcap$Note[idx.ref]
+ 
+ apple = rbind(apple, tmp)
+ 
+ ####################################################################################################################
+ # Exact match for PTH_ID, Hugo_Symbol, Chrom, and with loose match for Start.
+ redcap.start = round(redcap$Start/20)
+ aster.start = round(aster$Start/20)
+ 
+ redcap.tag = paste(redcap$PTH_ID, redcap$Hugo_Symbol, redcap$Chrom, redcap.start, sep='_')
+ aster.tag = paste(aster$PTH_ID, aster$Hugo_Symbol, aster$Chrom, aster.start, sep='_')
+ 
+ idx = which((aster.tag %in% redcap.tag) & (aster$Tag==''))
+ 
+ # ******************************************************************
+ # Manually check!
+ # ******************************************************************
+ idx.ref = match(aster.tag[idx], redcap.tag)
+ check = cbind(redcap[idx.ref, 3:9], aster[idx, c(5,6,9,11,28,30)])
+ check.1 = check[ ,c(2:4,9:11)]
+ 
+ IDX.EXCLUDE = c(1)
+ 
+ # ******************************************************************
+ idx = idx[-IDX.EXCLUDE]
+ idx.ref = match(aster.tag[idx], redcap.tag)
+ 
+ aster$Tag[idx] = 'REDCap'
+ 
+ tmp = aster[idx, maf.cols]
+ idx.ref = match(aster.tag[idx], redcap.tag)
+ tmp$AF_Clinic = redcap$AF[idx.ref]
+ tmp$Note = redcap$Note[idx.ref]
+ 
+ apple = rbind(apple, tmp)
+ 
+ ####################################################################################################################
+ # Save the results.
+ write.table(apple, paste0('AllBatches_1/Result/SNV_InDel/MuTect2_1/ClinicTag_', filter.scheme, '.txt'),
+             row.names=FALSE, col.names=TRUE, quote=FALSE, sep='\t')
+ write.table(aster, paste0('AllBatches_1/Result/SNV_InDel/MuTect2_1/FilteredVariants_', filter.scheme, '_Tagged.txt'),
+             row.names=FALSE, col.names=TRUE, quote=FALSE, sep='\t')
+ 
+ ####################################################################################################################
+ ####################################################################################################################
+ 
+   }
> 
> ####################################################################################################################
> ####################################################################################################################
> 
> proc.time()
   user  system elapsed 
  8.693   0.592   9.386 
